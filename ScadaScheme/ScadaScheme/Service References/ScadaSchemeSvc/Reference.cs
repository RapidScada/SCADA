//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Scada.Scheme.ScadaSchemeSvc {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeSettings", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    public partial class SchemeSettings : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool CmdEnabledField;
        
        private int RefrFreqField;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemePhrases SchemePhrasesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CmdEnabled {
            get {
                return this.CmdEnabledField;
            }
            set {
                if ((this.CmdEnabledField.Equals(value) != true)) {
                    this.CmdEnabledField = value;
                    this.RaisePropertyChanged("CmdEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RefrFreq {
            get {
                return this.RefrFreqField;
            }
            set {
                if ((this.RefrFreqField.Equals(value) != true)) {
                    this.RefrFreqField = value;
                    this.RaisePropertyChanged("RefrFreq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemePhrases SchemePhrases {
            get {
                return this.SchemePhrasesField;
            }
            set {
                if ((object.ReferenceEquals(this.SchemePhrasesField, value) != true)) {
                    this.SchemePhrasesField = value;
                    this.RaisePropertyChanged("SchemePhrases");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemePhrases", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    public partial class SchemePhrases : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDrawingSchemeField;
        
        private string ErrorExecutingActionField;
        
        private string LoadingField;
        
        private string SchemeNotLoadedField;
        
        private string UnableGetSettingsField;
        
        private string UnableLoadCnlDataField;
        
        private string UnableLoadSchemeField;
        
        private string WcfAddrUndefinedField;
        
        private string WcfErrorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDrawingScheme {
            get {
                return this.ErrorDrawingSchemeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDrawingSchemeField, value) != true)) {
                    this.ErrorDrawingSchemeField = value;
                    this.RaisePropertyChanged("ErrorDrawingScheme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorExecutingAction {
            get {
                return this.ErrorExecutingActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorExecutingActionField, value) != true)) {
                    this.ErrorExecutingActionField = value;
                    this.RaisePropertyChanged("ErrorExecutingAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Loading {
            get {
                return this.LoadingField;
            }
            set {
                if ((object.ReferenceEquals(this.LoadingField, value) != true)) {
                    this.LoadingField = value;
                    this.RaisePropertyChanged("Loading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SchemeNotLoaded {
            get {
                return this.SchemeNotLoadedField;
            }
            set {
                if ((object.ReferenceEquals(this.SchemeNotLoadedField, value) != true)) {
                    this.SchemeNotLoadedField = value;
                    this.RaisePropertyChanged("SchemeNotLoaded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnableGetSettings {
            get {
                return this.UnableGetSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.UnableGetSettingsField, value) != true)) {
                    this.UnableGetSettingsField = value;
                    this.RaisePropertyChanged("UnableGetSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnableLoadCnlData {
            get {
                return this.UnableLoadCnlDataField;
            }
            set {
                if ((object.ReferenceEquals(this.UnableLoadCnlDataField, value) != true)) {
                    this.UnableLoadCnlDataField = value;
                    this.RaisePropertyChanged("UnableLoadCnlData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnableLoadScheme {
            get {
                return this.UnableLoadSchemeField;
            }
            set {
                if ((object.ReferenceEquals(this.UnableLoadSchemeField, value) != true)) {
                    this.UnableLoadSchemeField = value;
                    this.RaisePropertyChanged("UnableLoadScheme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WcfAddrUndefined {
            get {
                return this.WcfAddrUndefinedField;
            }
            set {
                if ((object.ReferenceEquals(this.WcfAddrUndefinedField, value) != true)) {
                    this.WcfAddrUndefinedField = value;
                    this.RaisePropertyChanged("WcfAddrUndefined");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WcfError {
            get {
                return this.WcfErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.WcfErrorField, value) != true)) {
                    this.WcfErrorField = value;
                    this.RaisePropertyChanged("WcfError");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.SchemeData", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    public partial class SchemeViewSchemeData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.Generic.List<int> CnlListField;
        
        private bool CtrlRightField;
        
        private System.Collections.Generic.List<Scada.Scheme.ScadaSchemeSvc.SchemeViewElementData> ElementDataListField;
        
        private System.Collections.Generic.Dictionary<string, Scada.Scheme.ScadaSchemeSvc.SchemeViewImage> ImageDictField;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewScheme SchemeParamsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> CnlList {
            get {
                return this.CnlListField;
            }
            set {
                if ((object.ReferenceEquals(this.CnlListField, value) != true)) {
                    this.CnlListField = value;
                    this.RaisePropertyChanged("CnlList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CtrlRight {
            get {
                return this.CtrlRightField;
            }
            set {
                if ((this.CtrlRightField.Equals(value) != true)) {
                    this.CtrlRightField = value;
                    this.RaisePropertyChanged("CtrlRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Scada.Scheme.ScadaSchemeSvc.SchemeViewElementData> ElementDataList {
            get {
                return this.ElementDataListField;
            }
            set {
                if ((object.ReferenceEquals(this.ElementDataListField, value) != true)) {
                    this.ElementDataListField = value;
                    this.RaisePropertyChanged("ElementDataList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, Scada.Scheme.ScadaSchemeSvc.SchemeViewImage> ImageDict {
            get {
                return this.ImageDictField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageDictField, value) != true)) {
                    this.ImageDictField = value;
                    this.RaisePropertyChanged("ImageDict");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewScheme SchemeParams {
            get {
                return this.SchemeParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.SchemeParamsField, value) != true)) {
                    this.SchemeParamsField = value;
                    this.RaisePropertyChanged("SchemeParams");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.Scheme", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    public partial class SchemeViewScheme : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BackColorField;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewImage BackImageField;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewFont FontField;
        
        private string ForeColorField;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewSize SizeField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackColor {
            get {
                return this.BackColorField;
            }
            set {
                if ((object.ReferenceEquals(this.BackColorField, value) != true)) {
                    this.BackColorField = value;
                    this.RaisePropertyChanged("BackColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewImage BackImage {
            get {
                return this.BackImageField;
            }
            set {
                if ((object.ReferenceEquals(this.BackImageField, value) != true)) {
                    this.BackImageField = value;
                    this.RaisePropertyChanged("BackImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewFont Font {
            get {
                return this.FontField;
            }
            set {
                if ((object.ReferenceEquals(this.FontField, value) != true)) {
                    this.FontField = value;
                    this.RaisePropertyChanged("Font");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForeColor {
            get {
                return this.ForeColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ForeColorField, value) != true)) {
                    this.ForeColorField = value;
                    this.RaisePropertyChanged("ForeColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewSize Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.ElementData", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    public partial class SchemeViewElementData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewDynamicPicture DynamicPictureField;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewDynamicText DynamicTextField;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewElementTypes ElementTypeField;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewStaticPicture StaticPictureField;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewStaticText StaticTextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewDynamicPicture DynamicPicture {
            get {
                return this.DynamicPictureField;
            }
            set {
                if ((object.ReferenceEquals(this.DynamicPictureField, value) != true)) {
                    this.DynamicPictureField = value;
                    this.RaisePropertyChanged("DynamicPicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewDynamicText DynamicText {
            get {
                return this.DynamicTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DynamicTextField, value) != true)) {
                    this.DynamicTextField = value;
                    this.RaisePropertyChanged("DynamicText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewElementTypes ElementType {
            get {
                return this.ElementTypeField;
            }
            set {
                if ((this.ElementTypeField.Equals(value) != true)) {
                    this.ElementTypeField = value;
                    this.RaisePropertyChanged("ElementType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewStaticPicture StaticPicture {
            get {
                return this.StaticPictureField;
            }
            set {
                if ((object.ReferenceEquals(this.StaticPictureField, value) != true)) {
                    this.StaticPictureField = value;
                    this.RaisePropertyChanged("StaticPicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewStaticText StaticText {
            get {
                return this.StaticTextField;
            }
            set {
                if ((object.ReferenceEquals(this.StaticTextField, value) != true)) {
                    this.StaticTextField = value;
                    this.RaisePropertyChanged("StaticText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.Image", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.Point))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<int>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, Scada.Scheme.ScadaSchemeSvc.SchemeViewImage>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemePhrases))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewSchemeData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Scada.Scheme.ScadaSchemeSvc.SchemeViewElementData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewElementData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewDynamicPicture))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewStaticPicture))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewElement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewPoint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewSize))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewImageStretch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewAction))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Scada.Scheme.ScadaSchemeSvc.SchemeViewCondition>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewCompareOperator))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewLogicalOperator))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewDynamicText))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewStaticText))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewFont))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewHorizontalAlignment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewVerticalAlignment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewShowValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewElementTypes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewScheme))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Scada.Scheme.ScadaSchemeSvc.SchemeViewCnlData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewCnlData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewSchemeChange))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewChangeType))]
    public partial class SchemeViewImage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] DataField;
        
        private string NameField;
        
        private object SourceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.DynamicPicture", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    public partial class SchemeViewDynamicPicture : Scada.Scheme.ScadaSchemeSvc.SchemeViewStaticPicture {
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewAction ActionField;
        
        private string BorderColorOnHoverField;
        
        private System.Collections.Generic.List<Scada.Scheme.ScadaSchemeSvc.SchemeViewCondition> ConditionsField;
        
        private int CtrlCnlNumField;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewImage ImageOnHoverField;
        
        private int InCnlNumField;
        
        private string ToolTipField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewAction Action {
            get {
                return this.ActionField;
            }
            set {
                if ((this.ActionField.Equals(value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderColorOnHover {
            get {
                return this.BorderColorOnHoverField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderColorOnHoverField, value) != true)) {
                    this.BorderColorOnHoverField = value;
                    this.RaisePropertyChanged("BorderColorOnHover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Scada.Scheme.ScadaSchemeSvc.SchemeViewCondition> Conditions {
            get {
                return this.ConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionsField, value) != true)) {
                    this.ConditionsField = value;
                    this.RaisePropertyChanged("Conditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CtrlCnlNum {
            get {
                return this.CtrlCnlNumField;
            }
            set {
                if ((this.CtrlCnlNumField.Equals(value) != true)) {
                    this.CtrlCnlNumField = value;
                    this.RaisePropertyChanged("CtrlCnlNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewImage ImageOnHover {
            get {
                return this.ImageOnHoverField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageOnHoverField, value) != true)) {
                    this.ImageOnHoverField = value;
                    this.RaisePropertyChanged("ImageOnHover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InCnlNum {
            get {
                return this.InCnlNumField;
            }
            set {
                if ((this.InCnlNumField.Equals(value) != true)) {
                    this.InCnlNumField = value;
                    this.RaisePropertyChanged("InCnlNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToolTip {
            get {
                return this.ToolTipField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolTipField, value) != true)) {
                    this.ToolTipField = value;
                    this.RaisePropertyChanged("ToolTip");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.DynamicText", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    public partial class SchemeViewDynamicText : Scada.Scheme.ScadaSchemeSvc.SchemeViewStaticText {
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewAction ActionField;
        
        private string BackColorOnHoverField;
        
        private string BorderColorOnHoverField;
        
        private int CtrlCnlNumField;
        
        private string ForeColorOnHoverField;
        
        private int InCnlNumField;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewShowValue ShowValueField;
        
        private string ToolTipField;
        
        private bool UnderlineOnHoverField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewAction Action {
            get {
                return this.ActionField;
            }
            set {
                if ((this.ActionField.Equals(value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackColorOnHover {
            get {
                return this.BackColorOnHoverField;
            }
            set {
                if ((object.ReferenceEquals(this.BackColorOnHoverField, value) != true)) {
                    this.BackColorOnHoverField = value;
                    this.RaisePropertyChanged("BackColorOnHover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderColorOnHover {
            get {
                return this.BorderColorOnHoverField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderColorOnHoverField, value) != true)) {
                    this.BorderColorOnHoverField = value;
                    this.RaisePropertyChanged("BorderColorOnHover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CtrlCnlNum {
            get {
                return this.CtrlCnlNumField;
            }
            set {
                if ((this.CtrlCnlNumField.Equals(value) != true)) {
                    this.CtrlCnlNumField = value;
                    this.RaisePropertyChanged("CtrlCnlNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForeColorOnHover {
            get {
                return this.ForeColorOnHoverField;
            }
            set {
                if ((object.ReferenceEquals(this.ForeColorOnHoverField, value) != true)) {
                    this.ForeColorOnHoverField = value;
                    this.RaisePropertyChanged("ForeColorOnHover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InCnlNum {
            get {
                return this.InCnlNumField;
            }
            set {
                if ((this.InCnlNumField.Equals(value) != true)) {
                    this.InCnlNumField = value;
                    this.RaisePropertyChanged("InCnlNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewShowValue ShowValue {
            get {
                return this.ShowValueField;
            }
            set {
                if ((this.ShowValueField.Equals(value) != true)) {
                    this.ShowValueField = value;
                    this.RaisePropertyChanged("ShowValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToolTip {
            get {
                return this.ToolTipField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolTipField, value) != true)) {
                    this.ToolTipField = value;
                    this.RaisePropertyChanged("ToolTip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UnderlineOnHover {
            get {
                return this.UnderlineOnHoverField;
            }
            set {
                if ((this.UnderlineOnHoverField.Equals(value) != true)) {
                    this.UnderlineOnHoverField = value;
                    this.RaisePropertyChanged("UnderlineOnHover");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.StaticPicture", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewDynamicPicture))]
    public partial class SchemeViewStaticPicture : Scada.Scheme.ScadaSchemeSvc.SchemeViewElement {
        
        private string BorderColorField;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewImage ImageField;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewImageStretch ImageStretchField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderColor {
            get {
                return this.BorderColorField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderColorField, value) != true)) {
                    this.BorderColorField = value;
                    this.RaisePropertyChanged("BorderColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewImage Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewImageStretch ImageStretch {
            get {
                return this.ImageStretchField;
            }
            set {
                if ((this.ImageStretchField.Equals(value) != true)) {
                    this.ImageStretchField = value;
                    this.RaisePropertyChanged("ImageStretch");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.StaticText", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewDynamicText))]
    public partial class SchemeViewStaticText : Scada.Scheme.ScadaSchemeSvc.SchemeViewElement {
        
        private bool AutoSizeField;
        
        private string BackColorField;
        
        private string BorderColorField;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewFont FontField;
        
        private string ForeColorField;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewHorizontalAlignment HAlignField;
        
        private string TextField;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewVerticalAlignment VAlignField;
        
        private bool WordWrapField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoSize {
            get {
                return this.AutoSizeField;
            }
            set {
                if ((this.AutoSizeField.Equals(value) != true)) {
                    this.AutoSizeField = value;
                    this.RaisePropertyChanged("AutoSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackColor {
            get {
                return this.BackColorField;
            }
            set {
                if ((object.ReferenceEquals(this.BackColorField, value) != true)) {
                    this.BackColorField = value;
                    this.RaisePropertyChanged("BackColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderColor {
            get {
                return this.BorderColorField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderColorField, value) != true)) {
                    this.BorderColorField = value;
                    this.RaisePropertyChanged("BorderColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewFont Font {
            get {
                return this.FontField;
            }
            set {
                if ((object.ReferenceEquals(this.FontField, value) != true)) {
                    this.FontField = value;
                    this.RaisePropertyChanged("Font");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForeColor {
            get {
                return this.ForeColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ForeColorField, value) != true)) {
                    this.ForeColorField = value;
                    this.RaisePropertyChanged("ForeColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewHorizontalAlignment HAlign {
            get {
                return this.HAlignField;
            }
            set {
                if ((this.HAlignField.Equals(value) != true)) {
                    this.HAlignField = value;
                    this.RaisePropertyChanged("HAlign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewVerticalAlignment VAlign {
            get {
                return this.VAlignField;
            }
            set {
                if ((this.VAlignField.Equals(value) != true)) {
                    this.VAlignField = value;
                    this.RaisePropertyChanged("VAlign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WordWrap {
            get {
                return this.WordWrapField;
            }
            set {
                if ((this.WordWrapField.Equals(value) != true)) {
                    this.WordWrapField = value;
                    this.RaisePropertyChanged("WordWrap");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.ElementTypes", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    public enum SchemeViewElementTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StaticText = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DynamicText = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StaticPicture = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DynamicPicture = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.Element", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewStaticText))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewDynamicText))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewStaticPicture))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Scada.Scheme.ScadaSchemeSvc.SchemeViewDynamicPicture))]
    public partial class SchemeViewElement : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDField;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewPoint LocationField;
        
        private string NameField;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewSize SizeField;
        
        private int ZIndexField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewPoint Location {
            get {
                return this.LocationField;
            }
            set {
                if ((this.LocationField.Equals(value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewSize Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ZIndex {
            get {
                return this.ZIndexField;
            }
            set {
                if ((this.ZIndexField.Equals(value) != true)) {
                    this.ZIndexField = value;
                    this.RaisePropertyChanged("ZIndex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.Point", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    public partial struct SchemeViewPoint : System.ComponentModel.INotifyPropertyChanged {
        
        private int XField;
        
        private int YField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.Size", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    public partial struct SchemeViewSize : System.ComponentModel.INotifyPropertyChanged {
        
        private int HeightField;
        
        private int WidthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.ImageStretch", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    public enum SchemeViewImageStretch : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fill = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Zoom = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.Action", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    public enum SchemeViewAction : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawDiagram = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SendCommand = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.Condition", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    public partial class SchemeViewCondition : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double CompareArgument1Field;
        
        private double CompareArgument2Field;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewCompareOperator CompareOperator1Field;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewCompareOperator CompareOperator2Field;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewImage ImageField;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewLogicalOperator LogicalOperatorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CompareArgument1 {
            get {
                return this.CompareArgument1Field;
            }
            set {
                if ((this.CompareArgument1Field.Equals(value) != true)) {
                    this.CompareArgument1Field = value;
                    this.RaisePropertyChanged("CompareArgument1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CompareArgument2 {
            get {
                return this.CompareArgument2Field;
            }
            set {
                if ((this.CompareArgument2Field.Equals(value) != true)) {
                    this.CompareArgument2Field = value;
                    this.RaisePropertyChanged("CompareArgument2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewCompareOperator CompareOperator1 {
            get {
                return this.CompareOperator1Field;
            }
            set {
                if ((this.CompareOperator1Field.Equals(value) != true)) {
                    this.CompareOperator1Field = value;
                    this.RaisePropertyChanged("CompareOperator1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewCompareOperator CompareOperator2 {
            get {
                return this.CompareOperator2Field;
            }
            set {
                if ((this.CompareOperator2Field.Equals(value) != true)) {
                    this.CompareOperator2Field = value;
                    this.RaisePropertyChanged("CompareOperator2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewImage Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewLogicalOperator LogicalOperator {
            get {
                return this.LogicalOperatorField;
            }
            set {
                if ((this.LogicalOperatorField.Equals(value) != true)) {
                    this.LogicalOperatorField = value;
                    this.RaisePropertyChanged("LogicalOperator");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.Font", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    public partial class SchemeViewFont : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool BoldField;
        
        private bool ItalicField;
        
        private string NameField;
        
        private int SizeField;
        
        private bool UnderlineField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Bold {
            get {
                return this.BoldField;
            }
            set {
                if ((this.BoldField.Equals(value) != true)) {
                    this.BoldField = value;
                    this.RaisePropertyChanged("Bold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Italic {
            get {
                return this.ItalicField;
            }
            set {
                if ((this.ItalicField.Equals(value) != true)) {
                    this.ItalicField = value;
                    this.RaisePropertyChanged("Italic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Underline {
            get {
                return this.UnderlineField;
            }
            set {
                if ((this.UnderlineField.Equals(value) != true)) {
                    this.UnderlineField = value;
                    this.RaisePropertyChanged("Underline");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.HorizontalAlignment", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    public enum SchemeViewHorizontalAlignment : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Left = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Center = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Right = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.VerticalAlignment", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    public enum SchemeViewVerticalAlignment : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Top = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Center = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bottom = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.ShowValue", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    public enum SchemeViewShowValue : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotShow = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShowWithUnit = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShowWithoutUnit = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Point", Namespace="http://schemas.datacontract.org/2004/07/System.Drawing")]
    public partial struct Point : System.ComponentModel.INotifyPropertyChanged {
        
        private int xField;
        
        private int yField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int x {
            get {
                return this.xField;
            }
            set {
                if ((this.xField.Equals(value) != true)) {
                    this.xField = value;
                    this.RaisePropertyChanged("x");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int y {
            get {
                return this.yField;
            }
            set {
                if ((this.yField.Equals(value) != true)) {
                    this.yField = value;
                    this.RaisePropertyChanged("y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.CompareOperator", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    public enum SchemeViewCompareOperator : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Equal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotEqual = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LessThan = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LessThanEqual = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GreaterThan = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GreaterThanEqual = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.LogicalOperator", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    public enum SchemeViewLogicalOperator : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        And = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Or = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.CnlData", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    public partial class SchemeViewCnlData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ColorField;
        
        private int StatField;
        
        private double ValField;
        
        private string ValStrField;
        
        private string ValStrWithUnitField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Stat {
            get {
                return this.StatField;
            }
            set {
                if ((this.StatField.Equals(value) != true)) {
                    this.StatField = value;
                    this.RaisePropertyChanged("Stat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Val {
            get {
                return this.ValField;
            }
            set {
                if ((this.ValField.Equals(value) != true)) {
                    this.ValField = value;
                    this.RaisePropertyChanged("Val");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValStr {
            get {
                return this.ValStrField;
            }
            set {
                if ((object.ReferenceEquals(this.ValStrField, value) != true)) {
                    this.ValStrField = value;
                    this.RaisePropertyChanged("ValStr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValStrWithUnit {
            get {
                return this.ValStrWithUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.ValStrWithUnitField, value) != true)) {
                    this.ValStrWithUnitField = value;
                    this.RaisePropertyChanged("ValStrWithUnit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.SchemeChange", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    public partial class SchemeViewSchemeChange : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewChangeType ChangeTypeField;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewElementData ElementDataField;
        
        private int ElementIDField;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewImage ImageField;
        
        private string ImageNewNameField;
        
        private string ImageOldNameField;
        
        private Scada.Scheme.ScadaSchemeSvc.SchemeViewScheme SchemeParamsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewChangeType ChangeType {
            get {
                return this.ChangeTypeField;
            }
            set {
                if ((this.ChangeTypeField.Equals(value) != true)) {
                    this.ChangeTypeField = value;
                    this.RaisePropertyChanged("ChangeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewElementData ElementData {
            get {
                return this.ElementDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ElementDataField, value) != true)) {
                    this.ElementDataField = value;
                    this.RaisePropertyChanged("ElementData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ElementID {
            get {
                return this.ElementIDField;
            }
            set {
                if ((this.ElementIDField.Equals(value) != true)) {
                    this.ElementIDField = value;
                    this.RaisePropertyChanged("ElementID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewImage Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageNewName {
            get {
                return this.ImageNewNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageNewNameField, value) != true)) {
                    this.ImageNewNameField = value;
                    this.RaisePropertyChanged("ImageNewName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageOldName {
            get {
                return this.ImageOldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageOldNameField, value) != true)) {
                    this.ImageOldNameField = value;
                    this.RaisePropertyChanged("ImageOldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewScheme SchemeParams {
            get {
                return this.SchemeParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.SchemeParamsField, value) != true)) {
                    this.SchemeParamsField = value;
                    this.RaisePropertyChanged("SchemeParams");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchemeView.ChangeType", Namespace="http://schemas.datacontract.org/2004/07/Scada.Scheme")]
    public enum SchemeViewChangeType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unchanged = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SchemeChanged = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ElementAdded = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ElementChanged = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ElementDeleted = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImageAdded = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImageRenamed = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImageDeleted = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ScadaSchemeSvc.IScadaSchemeSvc")]
    public interface IScadaSchemeSvc {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScadaSchemeSvc/GetSettings", ReplyAction="http://tempuri.org/IScadaSchemeSvc/GetSettingsResponse")]
        System.IAsyncResult BeginGetSettings(System.AsyncCallback callback, object asyncState);
        
        Scada.Scheme.ScadaSchemeSvc.SchemeSettings EndGetSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScadaSchemeSvc/LoadScheme", ReplyAction="http://tempuri.org/IScadaSchemeSvc/LoadSchemeResponse")]
        System.IAsyncResult BeginLoadScheme(string clientID, int viewSetIndex, int viewIndex, System.AsyncCallback callback, object asyncState);
        
        bool EndLoadScheme(out Scada.Scheme.ScadaSchemeSvc.SchemeViewSchemeData schemeData, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScadaSchemeSvc/LoadCnlData", ReplyAction="http://tempuri.org/IScadaSchemeSvc/LoadCnlDataResponse")]
        System.IAsyncResult BeginLoadCnlData(string clientID, System.Collections.Generic.List<int> cnlList, System.AsyncCallback callback, object asyncState);
        
        bool EndLoadCnlData(out System.Collections.Generic.List<Scada.Scheme.ScadaSchemeSvc.SchemeViewCnlData> cnlDataList, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScadaSchemeSvc/GetChange", ReplyAction="http://tempuri.org/IScadaSchemeSvc/GetChangeResponse")]
        System.IAsyncResult BeginGetChange(string clientID, Scada.Scheme.ScadaSchemeSvc.Point cursorPosition, System.AsyncCallback callback, object asyncState);
        
        bool EndGetChange(out Scada.Scheme.ScadaSchemeSvc.SchemeViewSchemeChange schemeChange, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScadaSchemeSvc/ClearChange", ReplyAction="http://tempuri.org/IScadaSchemeSvc/ClearChangeResponse")]
        System.IAsyncResult BeginClearChange(string clientID, System.AsyncCallback callback, object asyncState);
        
        void EndClearChange(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScadaSchemeSvc/SelectElement", ReplyAction="http://tempuri.org/IScadaSchemeSvc/SelectElementResponse")]
        System.IAsyncResult BeginSelectElement(string clientID, int elementID, int clickX, int clickY, System.AsyncCallback callback, object asyncState);
        
        void EndSelectElement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScadaSchemeSvc/WriteException", ReplyAction="http://tempuri.org/IScadaSchemeSvc/WriteExceptionResponse")]
        System.IAsyncResult BeginWriteException(string message, System.AsyncCallback callback, object asyncState);
        
        void EndWriteException(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IScadaSchemeSvcChannel : Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Scada.Scheme.ScadaSchemeSvc.SchemeSettings Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Scada.Scheme.ScadaSchemeSvc.SchemeSettings)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadSchemeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadSchemeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewSchemeData schemeData {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Scada.Scheme.ScadaSchemeSvc.SchemeViewSchemeData)(this.results[0]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadCnlDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadCnlDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Scada.Scheme.ScadaSchemeSvc.SchemeViewCnlData> cnlDataList {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Scada.Scheme.ScadaSchemeSvc.SchemeViewCnlData>)(this.results[0]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Scada.Scheme.ScadaSchemeSvc.SchemeViewSchemeChange schemeChange {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Scada.Scheme.ScadaSchemeSvc.SchemeViewSchemeChange)(this.results[0]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScadaSchemeSvcClient : System.ServiceModel.ClientBase<Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc>, Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc {
        
        private BeginOperationDelegate onBeginGetSettingsDelegate;
        
        private EndOperationDelegate onEndGetSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadSchemeDelegate;
        
        private EndOperationDelegate onEndLoadSchemeDelegate;
        
        private System.Threading.SendOrPostCallback onLoadSchemeCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadCnlDataDelegate;
        
        private EndOperationDelegate onEndLoadCnlDataDelegate;
        
        private System.Threading.SendOrPostCallback onLoadCnlDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetChangeDelegate;
        
        private EndOperationDelegate onEndGetChangeDelegate;
        
        private System.Threading.SendOrPostCallback onGetChangeCompletedDelegate;
        
        private BeginOperationDelegate onBeginClearChangeDelegate;
        
        private EndOperationDelegate onEndClearChangeDelegate;
        
        private System.Threading.SendOrPostCallback onClearChangeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSelectElementDelegate;
        
        private EndOperationDelegate onEndSelectElementDelegate;
        
        private System.Threading.SendOrPostCallback onSelectElementCompletedDelegate;
        
        private BeginOperationDelegate onBeginWriteExceptionDelegate;
        
        private EndOperationDelegate onEndWriteExceptionDelegate;
        
        private System.Threading.SendOrPostCallback onWriteExceptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ScadaSchemeSvcClient() {
        }
        
        public ScadaSchemeSvcClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ScadaSchemeSvcClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScadaSchemeSvcClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScadaSchemeSvcClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetSettingsCompletedEventArgs> GetSettingsCompleted;
        
        public event System.EventHandler<LoadSchemeCompletedEventArgs> LoadSchemeCompleted;
        
        public event System.EventHandler<LoadCnlDataCompletedEventArgs> LoadCnlDataCompleted;
        
        public event System.EventHandler<GetChangeCompletedEventArgs> GetChangeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ClearChangeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SelectElementCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> WriteExceptionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc.BeginGetSettings(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSettings(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Scada.Scheme.ScadaSchemeSvc.SchemeSettings Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc.EndGetSettings(System.IAsyncResult result) {
            return base.Channel.EndGetSettings(result);
        }
        
        private System.IAsyncResult OnBeginGetSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc)(this)).BeginGetSettings(callback, asyncState);
        }
        
        private object[] OnEndGetSettings(System.IAsyncResult result) {
            Scada.Scheme.ScadaSchemeSvc.SchemeSettings retVal = ((Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc)(this)).EndGetSettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSettingsCompleted(object state) {
            if ((this.GetSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSettingsCompleted(this, new GetSettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSettingsAsync() {
            this.GetSettingsAsync(null);
        }
        
        public void GetSettingsAsync(object userState) {
            if ((this.onBeginGetSettingsDelegate == null)) {
                this.onBeginGetSettingsDelegate = new BeginOperationDelegate(this.OnBeginGetSettings);
            }
            if ((this.onEndGetSettingsDelegate == null)) {
                this.onEndGetSettingsDelegate = new EndOperationDelegate(this.OnEndGetSettings);
            }
            if ((this.onGetSettingsCompletedDelegate == null)) {
                this.onGetSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetSettingsDelegate, null, this.onEndGetSettingsDelegate, this.onGetSettingsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc.BeginLoadScheme(string clientID, int viewSetIndex, int viewIndex, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadScheme(clientID, viewSetIndex, viewIndex, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc.EndLoadScheme(out Scada.Scheme.ScadaSchemeSvc.SchemeViewSchemeData schemeData, System.IAsyncResult result) {
            return base.Channel.EndLoadScheme(out schemeData, result);
        }
        
        private System.IAsyncResult OnBeginLoadScheme(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            int viewSetIndex = ((int)(inValues[1]));
            int viewIndex = ((int)(inValues[2]));
            return ((Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc)(this)).BeginLoadScheme(clientID, viewSetIndex, viewIndex, callback, asyncState);
        }
        
        private object[] OnEndLoadScheme(System.IAsyncResult result) {
            Scada.Scheme.ScadaSchemeSvc.SchemeViewSchemeData schemeData = this.GetDefaultValueForInitialization<Scada.Scheme.ScadaSchemeSvc.SchemeViewSchemeData>();
            bool retVal = ((Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc)(this)).EndLoadScheme(out schemeData, result);
            return new object[] {
                    schemeData,
                    retVal};
        }
        
        private void OnLoadSchemeCompleted(object state) {
            if ((this.LoadSchemeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadSchemeCompleted(this, new LoadSchemeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadSchemeAsync(string clientID, int viewSetIndex, int viewIndex) {
            this.LoadSchemeAsync(clientID, viewSetIndex, viewIndex, null);
        }
        
        public void LoadSchemeAsync(string clientID, int viewSetIndex, int viewIndex, object userState) {
            if ((this.onBeginLoadSchemeDelegate == null)) {
                this.onBeginLoadSchemeDelegate = new BeginOperationDelegate(this.OnBeginLoadScheme);
            }
            if ((this.onEndLoadSchemeDelegate == null)) {
                this.onEndLoadSchemeDelegate = new EndOperationDelegate(this.OnEndLoadScheme);
            }
            if ((this.onLoadSchemeCompletedDelegate == null)) {
                this.onLoadSchemeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadSchemeCompleted);
            }
            base.InvokeAsync(this.onBeginLoadSchemeDelegate, new object[] {
                        clientID,
                        viewSetIndex,
                        viewIndex}, this.onEndLoadSchemeDelegate, this.onLoadSchemeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc.BeginLoadCnlData(string clientID, System.Collections.Generic.List<int> cnlList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadCnlData(clientID, cnlList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc.EndLoadCnlData(out System.Collections.Generic.List<Scada.Scheme.ScadaSchemeSvc.SchemeViewCnlData> cnlDataList, System.IAsyncResult result) {
            return base.Channel.EndLoadCnlData(out cnlDataList, result);
        }
        
        private System.IAsyncResult OnBeginLoadCnlData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            System.Collections.Generic.List<int> cnlList = ((System.Collections.Generic.List<int>)(inValues[1]));
            return ((Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc)(this)).BeginLoadCnlData(clientID, cnlList, callback, asyncState);
        }
        
        private object[] OnEndLoadCnlData(System.IAsyncResult result) {
            System.Collections.Generic.List<Scada.Scheme.ScadaSchemeSvc.SchemeViewCnlData> cnlDataList = this.GetDefaultValueForInitialization<System.Collections.Generic.List<Scada.Scheme.ScadaSchemeSvc.SchemeViewCnlData>>();
            bool retVal = ((Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc)(this)).EndLoadCnlData(out cnlDataList, result);
            return new object[] {
                    cnlDataList,
                    retVal};
        }
        
        private void OnLoadCnlDataCompleted(object state) {
            if ((this.LoadCnlDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadCnlDataCompleted(this, new LoadCnlDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadCnlDataAsync(string clientID, System.Collections.Generic.List<int> cnlList) {
            this.LoadCnlDataAsync(clientID, cnlList, null);
        }
        
        public void LoadCnlDataAsync(string clientID, System.Collections.Generic.List<int> cnlList, object userState) {
            if ((this.onBeginLoadCnlDataDelegate == null)) {
                this.onBeginLoadCnlDataDelegate = new BeginOperationDelegate(this.OnBeginLoadCnlData);
            }
            if ((this.onEndLoadCnlDataDelegate == null)) {
                this.onEndLoadCnlDataDelegate = new EndOperationDelegate(this.OnEndLoadCnlData);
            }
            if ((this.onLoadCnlDataCompletedDelegate == null)) {
                this.onLoadCnlDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadCnlDataCompleted);
            }
            base.InvokeAsync(this.onBeginLoadCnlDataDelegate, new object[] {
                        clientID,
                        cnlList}, this.onEndLoadCnlDataDelegate, this.onLoadCnlDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc.BeginGetChange(string clientID, Scada.Scheme.ScadaSchemeSvc.Point cursorPosition, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetChange(clientID, cursorPosition, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc.EndGetChange(out Scada.Scheme.ScadaSchemeSvc.SchemeViewSchemeChange schemeChange, System.IAsyncResult result) {
            return base.Channel.EndGetChange(out schemeChange, result);
        }
        
        private System.IAsyncResult OnBeginGetChange(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            Scada.Scheme.ScadaSchemeSvc.Point cursorPosition = ((Scada.Scheme.ScadaSchemeSvc.Point)(inValues[1]));
            return ((Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc)(this)).BeginGetChange(clientID, cursorPosition, callback, asyncState);
        }
        
        private object[] OnEndGetChange(System.IAsyncResult result) {
            Scada.Scheme.ScadaSchemeSvc.SchemeViewSchemeChange schemeChange = this.GetDefaultValueForInitialization<Scada.Scheme.ScadaSchemeSvc.SchemeViewSchemeChange>();
            bool retVal = ((Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc)(this)).EndGetChange(out schemeChange, result);
            return new object[] {
                    schemeChange,
                    retVal};
        }
        
        private void OnGetChangeCompleted(object state) {
            if ((this.GetChangeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetChangeCompleted(this, new GetChangeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetChangeAsync(string clientID, Scada.Scheme.ScadaSchemeSvc.Point cursorPosition) {
            this.GetChangeAsync(clientID, cursorPosition, null);
        }
        
        public void GetChangeAsync(string clientID, Scada.Scheme.ScadaSchemeSvc.Point cursorPosition, object userState) {
            if ((this.onBeginGetChangeDelegate == null)) {
                this.onBeginGetChangeDelegate = new BeginOperationDelegate(this.OnBeginGetChange);
            }
            if ((this.onEndGetChangeDelegate == null)) {
                this.onEndGetChangeDelegate = new EndOperationDelegate(this.OnEndGetChange);
            }
            if ((this.onGetChangeCompletedDelegate == null)) {
                this.onGetChangeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetChangeCompleted);
            }
            base.InvokeAsync(this.onBeginGetChangeDelegate, new object[] {
                        clientID,
                        cursorPosition}, this.onEndGetChangeDelegate, this.onGetChangeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc.BeginClearChange(string clientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClearChange(clientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc.EndClearChange(System.IAsyncResult result) {
            base.Channel.EndClearChange(result);
        }
        
        private System.IAsyncResult OnBeginClearChange(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            return ((Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc)(this)).BeginClearChange(clientID, callback, asyncState);
        }
        
        private object[] OnEndClearChange(System.IAsyncResult result) {
            ((Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc)(this)).EndClearChange(result);
            return null;
        }
        
        private void OnClearChangeCompleted(object state) {
            if ((this.ClearChangeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClearChangeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClearChangeAsync(string clientID) {
            this.ClearChangeAsync(clientID, null);
        }
        
        public void ClearChangeAsync(string clientID, object userState) {
            if ((this.onBeginClearChangeDelegate == null)) {
                this.onBeginClearChangeDelegate = new BeginOperationDelegate(this.OnBeginClearChange);
            }
            if ((this.onEndClearChangeDelegate == null)) {
                this.onEndClearChangeDelegate = new EndOperationDelegate(this.OnEndClearChange);
            }
            if ((this.onClearChangeCompletedDelegate == null)) {
                this.onClearChangeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClearChangeCompleted);
            }
            base.InvokeAsync(this.onBeginClearChangeDelegate, new object[] {
                        clientID}, this.onEndClearChangeDelegate, this.onClearChangeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc.BeginSelectElement(string clientID, int elementID, int clickX, int clickY, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSelectElement(clientID, elementID, clickX, clickY, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc.EndSelectElement(System.IAsyncResult result) {
            base.Channel.EndSelectElement(result);
        }
        
        private System.IAsyncResult OnBeginSelectElement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            int elementID = ((int)(inValues[1]));
            int clickX = ((int)(inValues[2]));
            int clickY = ((int)(inValues[3]));
            return ((Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc)(this)).BeginSelectElement(clientID, elementID, clickX, clickY, callback, asyncState);
        }
        
        private object[] OnEndSelectElement(System.IAsyncResult result) {
            ((Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc)(this)).EndSelectElement(result);
            return null;
        }
        
        private void OnSelectElementCompleted(object state) {
            if ((this.SelectElementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SelectElementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SelectElementAsync(string clientID, int elementID, int clickX, int clickY) {
            this.SelectElementAsync(clientID, elementID, clickX, clickY, null);
        }
        
        public void SelectElementAsync(string clientID, int elementID, int clickX, int clickY, object userState) {
            if ((this.onBeginSelectElementDelegate == null)) {
                this.onBeginSelectElementDelegate = new BeginOperationDelegate(this.OnBeginSelectElement);
            }
            if ((this.onEndSelectElementDelegate == null)) {
                this.onEndSelectElementDelegate = new EndOperationDelegate(this.OnEndSelectElement);
            }
            if ((this.onSelectElementCompletedDelegate == null)) {
                this.onSelectElementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSelectElementCompleted);
            }
            base.InvokeAsync(this.onBeginSelectElementDelegate, new object[] {
                        clientID,
                        elementID,
                        clickX,
                        clickY}, this.onEndSelectElementDelegate, this.onSelectElementCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc.BeginWriteException(string message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWriteException(message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc.EndWriteException(System.IAsyncResult result) {
            base.Channel.EndWriteException(result);
        }
        
        private System.IAsyncResult OnBeginWriteException(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string message = ((string)(inValues[0]));
            return ((Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc)(this)).BeginWriteException(message, callback, asyncState);
        }
        
        private object[] OnEndWriteException(System.IAsyncResult result) {
            ((Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc)(this)).EndWriteException(result);
            return null;
        }
        
        private void OnWriteExceptionCompleted(object state) {
            if ((this.WriteExceptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WriteExceptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WriteExceptionAsync(string message) {
            this.WriteExceptionAsync(message, null);
        }
        
        public void WriteExceptionAsync(string message, object userState) {
            if ((this.onBeginWriteExceptionDelegate == null)) {
                this.onBeginWriteExceptionDelegate = new BeginOperationDelegate(this.OnBeginWriteException);
            }
            if ((this.onEndWriteExceptionDelegate == null)) {
                this.onEndWriteExceptionDelegate = new EndOperationDelegate(this.OnEndWriteException);
            }
            if ((this.onWriteExceptionCompletedDelegate == null)) {
                this.onWriteExceptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWriteExceptionCompleted);
            }
            base.InvokeAsync(this.onBeginWriteExceptionDelegate, new object[] {
                        message}, this.onEndWriteExceptionDelegate, this.onWriteExceptionCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc CreateChannel() {
            return new ScadaSchemeSvcClientChannel(this);
        }
        
        private class ScadaSchemeSvcClientChannel : ChannelBase<Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc>, Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc {
            
            public ScadaSchemeSvcClientChannel(System.ServiceModel.ClientBase<Scada.Scheme.ScadaSchemeSvc.IScadaSchemeSvc> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetSettings(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetSettings", _args, callback, asyncState);
                return _result;
            }
            
            public Scada.Scheme.ScadaSchemeSvc.SchemeSettings EndGetSettings(System.IAsyncResult result) {
                object[] _args = new object[0];
                Scada.Scheme.ScadaSchemeSvc.SchemeSettings _result = ((Scada.Scheme.ScadaSchemeSvc.SchemeSettings)(base.EndInvoke("GetSettings", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLoadScheme(string clientID, int viewSetIndex, int viewIndex, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = clientID;
                _args[1] = viewSetIndex;
                _args[2] = viewIndex;
                System.IAsyncResult _result = base.BeginInvoke("LoadScheme", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndLoadScheme(out Scada.Scheme.ScadaSchemeSvc.SchemeViewSchemeData schemeData, System.IAsyncResult result) {
                object[] _args = new object[1];
                bool _result = ((bool)(base.EndInvoke("LoadScheme", _args, result)));
                schemeData = ((Scada.Scheme.ScadaSchemeSvc.SchemeViewSchemeData)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginLoadCnlData(string clientID, System.Collections.Generic.List<int> cnlList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = clientID;
                _args[1] = cnlList;
                System.IAsyncResult _result = base.BeginInvoke("LoadCnlData", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndLoadCnlData(out System.Collections.Generic.List<Scada.Scheme.ScadaSchemeSvc.SchemeViewCnlData> cnlDataList, System.IAsyncResult result) {
                object[] _args = new object[1];
                bool _result = ((bool)(base.EndInvoke("LoadCnlData", _args, result)));
                cnlDataList = ((System.Collections.Generic.List<Scada.Scheme.ScadaSchemeSvc.SchemeViewCnlData>)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginGetChange(string clientID, Scada.Scheme.ScadaSchemeSvc.Point cursorPosition, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = clientID;
                _args[1] = cursorPosition;
                System.IAsyncResult _result = base.BeginInvoke("GetChange", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndGetChange(out Scada.Scheme.ScadaSchemeSvc.SchemeViewSchemeChange schemeChange, System.IAsyncResult result) {
                object[] _args = new object[1];
                bool _result = ((bool)(base.EndInvoke("GetChange", _args, result)));
                schemeChange = ((Scada.Scheme.ScadaSchemeSvc.SchemeViewSchemeChange)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginClearChange(string clientID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = clientID;
                System.IAsyncResult _result = base.BeginInvoke("ClearChange", _args, callback, asyncState);
                return _result;
            }
            
            public void EndClearChange(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ClearChange", _args, result);
            }
            
            public System.IAsyncResult BeginSelectElement(string clientID, int elementID, int clickX, int clickY, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = clientID;
                _args[1] = elementID;
                _args[2] = clickX;
                _args[3] = clickY;
                System.IAsyncResult _result = base.BeginInvoke("SelectElement", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSelectElement(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SelectElement", _args, result);
            }
            
            public System.IAsyncResult BeginWriteException(string message, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = message;
                System.IAsyncResult _result = base.BeginInvoke("WriteException", _args, callback, asyncState);
                return _result;
            }
            
            public void EndWriteException(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("WriteException", _args, result);
            }
        }
    }
}
